#!/bin/sh

if [ "x$DEBUG" = "xyes" ]; then
    set -x
fi

APP=$(realpath $0)

fix_gcc() {
    local _gcc _v _cc1 _lib

    _gcc=$(which gcc 2>/dev/null)

    if [ "x$_gcc" = "x" ]; then
	return
    fi

    _v=$(gcc --version | grep GCC | awk '{print $3}')
    _cc1=$(find $APPDIR -name cc1 |grep gcc |grep $_v | head -n 1)

    if [ "x$_cc1" = "x" ]; then
	return
    fi
    
    _lib=$(find $APPDIR -name crt1.o |grep gcc |grep $_v | head -n 1)
    if [ "x$_lib" = "x" ]; then
	return
    fi
    
    COMPILER_PATH=$(dirname $_cc1)
    export COMPILER_PATH
    LIBRARY_PATH=$(dirname $_lib)
    export LIBRARY_PATH
}

set_pkg_path() {
    local _path 

    if [ "X$AUTO_DETECT_PKG_CONFIG_PATH" = "Xno" ]; then
        return
    fi

    _path="$(dirname $(which xbuild | sed -e 's@^.*/gnu/@/gnu/@g'))/../lib"
    PKG_CONFIG_PATH="$_path/pkgconfig"
    export PKG_CONFIG_PATH
}

fix_pkg_path_hwloc() {
    local _f _path
    
    if pkg-config --cflags hwloc 2>&1 >/dev/null; then
	return
    fi

    _f=$(ldd $(which hwloc-info) 2>/dev/null| grep libhwloc | awk '{ print $3}')
    if [ -z "$_f" ]; then
	echo no hwloc found
	return
    fi

    _path=$(dirname "$_f")/pkgconfig
    PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$_path"
    export PKG_CONFIG_PATH
}

PATH="$XBUILD_DIR:$PATH"
export PATH
# LD_LIBRARY_PATH="$XBUILD_DIR/../lib:$LD_LIBRARY_PATH"
# export LD_LIBRARY_PATH

if [ ! -z "$APPDIR" ]; then
    fix_gcc
fi

set_pkg_path

fix_pkg_path_hwloc

if [ "X$XBUILD_SHELL" = "X" ]; then
    XBUILD_SHELL=$(cat $APP |head -n1 |sed -e 's@^#![ ]*@@g')
    export XBUILD_SHELL
fi

export SHELL=$XBUILD_SHELL

if [ "X$1" = "Xshell" ]; then
    exec $SHELL
else
    exec "$@"
fi
